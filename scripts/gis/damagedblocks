#!/usr/bin/python
# -*- coding: utf-8 -*-

from __future__ import print_function
from __future__ import unicode_literals
from __future__ import absolute_import
from __future__ import division

import argparse
import os
import sys

import gdal

gdal.UseExceptions()


def get_parser():
    """ Return argument parser. """
    parser = argparse.ArgumentParser(
        description=""
    )
    parser.add_argument(
        'namepath',
        metavar='NAMEFILE',
    )
    parser.add_argument(
        'ahnpath',
        metavar='AHNPATH',
    )
    # Add arguments here.
    return parser


def command(namepath, ahnpath):
    """ Do something spectacular. """
    with open(namepath) as namefile:
        for name in namefile:
            subpath = name[1:4]
            ahnname = name.strip()
            path = os.path.join(ahnpath, subpath, ahnname)
            sys.stderr.write('{}\n'.format(path))
            dataset = gdal.Open(path)
            array = dataset.ReadAsArray()
            if array is None:
                sys.stdout.write('{}\n'.format(name.strip()))


def main():
    """ Call command with args from parser. """
    command(**vars(get_parser().parse_args()))


if __name__ == '__main__':
    exit(main())
